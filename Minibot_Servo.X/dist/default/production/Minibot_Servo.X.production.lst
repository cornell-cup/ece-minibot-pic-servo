

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Apr 28 03:55:10 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001C                     	;# 
    43  001D                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  0081                     	;# 
    47  0085                     	;# 
    48  0086                     	;# 
    49  0087                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  008F                     	;# 
    54  0090                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0093                     	;# 
    58  0093                     	;# 
    59  0094                     	;# 
    60  0095                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  010F                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0118                     	;# 
    79  0119                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011E                     	;# 
    83  011F                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  019D                     	;# 
    87  019E                     	;# 
    88  0017                     _CCP1CON	set	23
    89  0016                     _CCPR1H	set	22
    90  0015                     _CCPR1L	set	21
    91  000B                     _INTCONbits	set	11
    92  000C                     _PIR1bits	set	12
    93  0005                     _PORTAbits	set	5
    94  0007                     _PORTCbits	set	7
    95  0013                     _SSPBUF	set	19
    96  0014                     _SSPCON	set	20
    97  0010                     _T1CON	set	16
    98  000F                     _TMR1H	set	15
    99  000E                     _TMR1L	set	14
   100  008F                     _OSCCON	set	143
   101  008F                     _OSCCONbits	set	143
   102  008C                     _PIE1bits	set	140
   103  0094                     _SSPSTATbits	set	148
   104  0085                     _TRISAbits	set	133
   105  0086                     _TRISBbits	set	134
   106  0087                     _TRISCbits	set	135
   107  011E                     _ANSEL	set	286
   108  011F                     _ANSELH	set	287
   109  0119                     _CM1CON0	set	281
   110  011A                     _CM2CON0	set	282
   111                           
   112                           ; #config settings
   113  0000                     
   114                           	psect	cinit
   115  0013                     start_initialization:	
   116  0013                     __initialization:	
   117                           
   118                           ; Clear objects allocated to COMMON
   119  0013  01FC               	clrf	__pbssCOMMON& (0+127)
   120  0014  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   121                           
   122                           ; Clear objects allocated to BANK0
   123  0015  01A9               	clrf	__pbssBANK0& (0+127)
   124  0016  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   125  0017  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   126  0018  01AC               	clrf	(__pbssBANK0+3)& (0+127)
   127  0019  01AD               	clrf	(__pbssBANK0+4)& (0+127)
   128  001A  01AE               	clrf	(__pbssBANK0+5)& (0+127)
   129  001B  01AF               	clrf	(__pbssBANK0+6)& (0+127)
   130  001C                     end_of_initialization:	
   131                           ;End of C runtime variable initialization code
   132                           
   133  001C                     __end_of__initialization:	
   134  001C  0183               	clrf	3
   135  001D  118A  281F         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  007C                     __pbssCOMMON:	
   139  007C                     _waith:	
   140  007C                     	ds	1
   141  007D                     _waitl:	
   142  007D                     	ds	1
   143                           
   144                           	psect	bssBANK0
   145  0029                     __pbssBANK0:	
   146  0029                     _ccp:	
   147  0029                     	ds	2
   148  002B                     _wait:	
   149  002B                     	ds	2
   150  002D                     _servoh:	
   151  002D                     	ds	1
   152  002E                     _servol:	
   153  002E                     	ds	1
   154  002F                     _servo:	
   155  002F                     	ds	1
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_main:	
   160  0070                     ?_ccpint:	
   161                           ; 0 bytes @ 0x0
   162                           
   163  0070                     ?i1___wmul:	
   164                           ; 0 bytes @ 0x0
   165                           
   166  0070                     i1___wmul@multiplier:	
   167                           ; 2 bytes @ 0x0
   168                           
   169                           
   170                           ; 2 bytes @ 0x0
   171  0070                     	ds	2
   172  0072                     i1___wmul@multiplicand:	
   173                           
   174                           ; 2 bytes @ 0x2
   175  0072                     	ds	2
   176  0074                     ??i1___wmul:	
   177  0074                     i1___wmul@product:	
   178                           ; 0 bytes @ 0x4
   179                           
   180                           
   181                           ; 2 bytes @ 0x4
   182  0074                     	ds	2
   183  0076                     ??_ccpint:	
   184                           
   185                           ; 0 bytes @ 0x6
   186  0076                     	ds	6
   187                           
   188                           	psect	cstackBANK0
   189  0020                     __pcstackBANK0:	
   190  0020                     ?___wmul:	
   191  0020                     ___wmul@multiplier:	
   192                           ; 2 bytes @ 0x0
   193                           
   194                           
   195                           ; 2 bytes @ 0x0
   196  0020                     	ds	2
   197  0022                     ___wmul@multiplicand:	
   198                           
   199                           ; 2 bytes @ 0x2
   200  0022                     	ds	2
   201  0024                     ??___wmul:	
   202  0024                     ___wmul@product:	
   203                           ; 0 bytes @ 0x4
   204                           
   205                           
   206                           ; 2 bytes @ 0x4
   207  0024                     	ds	2
   208  0026                     ??_main:	
   209                           
   210                           ; 0 bytes @ 0x6
   211  0026                     	ds	2
   212  0028                     main@spi_data:	
   213                           
   214                           ; 1 bytes @ 0x8
   215  0028                     	ds	1
   216                           
   217                           	psect	maintext
   218  001F                     __pmaintext:	
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 41 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  spi_data        1    8[BANK0 ] unsigned char 
   229 ;; Return value:  Size  Location     Type
   230 ;;		None               void
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, pclath, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : B00/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   238 ;;      Params:         0       0       0       0
   239 ;;      Locals:         0       1       0       0
   240 ;;      Temps:          0       2       0       0
   241 ;;      Totals:         0       3       0       0
   242 ;;Total ram usage:        3 bytes
   243 ;; Hardware stack levels required when called:    3
   244 ;; This function calls:
   245 ;;		___wmul
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           
   252                           ;psect for function _main
   253  001F                     _main:	
   254                           
   255                           ;main.c: 42: OSCCON = 0x71;
   256                           
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   259  001F  3071               	movlw	113
   260  0020  1683               	bsf	3,5	;RP0=1, select bank1
   261  0021  1303               	bcf	3,6	;RP1=0, select bank1
   262  0022  008F               	movwf	15	;volatile
   263  0023                     l63:	
   264                           ;main.c: 43: while (OSCCONbits.HTS == 0);
   265                           
   266  0023  1D0F               	btfss	15,2	;volatile
   267  0024  2823               	goto	l63
   268                           
   269                           ;main.c: 45: CM1CON0 = 7;
   270  0025  3007               	movlw	7
   271  0026  1283               	bcf	3,5	;RP0=0, select bank2
   272  0027  1703               	bsf	3,6	;RP1=1, select bank2
   273  0028  0099               	movwf	25	;volatile
   274                           
   275                           ;main.c: 46: CM2CON0 = 7;
   276  0029  3007               	movlw	7
   277  002A  009A               	movwf	26	;volatile
   278                           
   279                           ;main.c: 47: ANSEL = 0;
   280  002B  019E               	clrf	30	;volatile
   281                           
   282                           ;main.c: 48: ANSELH = 0;
   283  002C  019F               	clrf	31	;volatile
   284                           
   285                           ;main.c: 51: TRISCbits.TRISC5 = 0;
   286  002D  1683               	bsf	3,5	;RP0=1, select bank1
   287  002E  1303               	bcf	3,6	;RP1=0, select bank1
   288  002F  1287               	bcf	7,5	;volatile
   289                           
   290                           ;main.c: 53: INTCONbits.GIE = 1;
   291  0030  178B               	bsf	11,7	;volatile
   292                           
   293                           ;main.c: 54: INTCONbits.PEIE = 1;
   294  0031  170B               	bsf	11,6	;volatile
   295                           
   296                           ;main.c: 55: PIR1bits.CCP1IF = 0;
   297  0032  1283               	bcf	3,5	;RP0=0, select bank0
   298  0033  1303               	bcf	3,6	;RP1=0, select bank0
   299  0034  110C               	bcf	12,2	;volatile
   300                           
   301                           ;main.c: 56: PIE1bits.CCP1IE = 1;
   302  0035  1683               	bsf	3,5	;RP0=1, select bank1
   303  0036  1303               	bcf	3,6	;RP1=0, select bank1
   304  0037  150C               	bsf	12,2	;volatile
   305                           
   306                           ;main.c: 58: servo = 0;
   307  0038  1283               	bcf	3,5	;RP0=0, select bank0
   308  0039  1303               	bcf	3,6	;RP1=0, select bank0
   309  003A  01AF               	clrf	_servo	;volatile
   310                           
   311                           ;main.c: 60: ccp = (uint16_t) 1200 + servo*18;
   312  003B  082F               	movf	_servo,w	;volatile
   313  003C  00A6               	movwf	??_main
   314  003D  01A7               	clrf	??_main+1
   315  003E  0826               	movf	??_main,w
   316  003F  00A0               	movwf	___wmul@multiplier
   317  0040  0827               	movf	??_main+1,w
   318  0041  00A1               	movwf	___wmul@multiplier+1
   319  0042  3012               	movlw	18
   320  0043  00A2               	movwf	___wmul@multiplicand
   321  0044  3000               	movlw	0
   322  0045  00A3               	movwf	___wmul@multiplicand+1
   323  0046  118A  2108  118A   	fcall	___wmul
   324  0049  1283               	bcf	3,5	;RP0=0, select bank0
   325  004A  1303               	bcf	3,6	;RP1=0, select bank0
   326  004B  0820               	movf	?___wmul,w
   327  004C  3EB0               	addlw	176
   328  004D  00A9               	movwf	_ccp	;volatile
   329  004E  0821               	movf	?___wmul+1,w
   330  004F  1803               	skipnc
   331  0050  3E01               	addlw	1
   332  0051  3E04               	addlw	4
   333  0052  00AA               	movwf	_ccp+1	;volatile
   334                           
   335                           ;main.c: 61: servoh = ccp >> 8;
   336  0053  082A               	movf	_ccp+1,w	;volatile
   337  0054  00A6               	movwf	??_main
   338  0055  0826               	movf	??_main,w
   339  0056  00AD               	movwf	_servoh	;volatile
   340                           
   341                           ;main.c: 62: servol = ccp;
   342  0057  0829               	movf	_ccp,w	;volatile
   343  0058  00A6               	movwf	??_main
   344  0059  0826               	movf	??_main,w
   345  005A  00AE               	movwf	_servol	;volatile
   346                           
   347                           ;main.c: 63: wait = (uint16_t) 40000-1 - ccp;
   348  005B  0829               	movf	_ccp,w	;volatile
   349  005C  3E01               	addlw	1
   350  005D  00A6               	movwf	??_main
   351  005E  082A               	movf	_ccp+1,w	;volatile
   352  005F  1803               	skipnc
   353  0060  3E01               	addlw	1
   354  0061  3E00               	addlw	0
   355  0062  00A7               	movwf	??_main+1
   356  0063  09A6               	comf	??_main,f
   357  0064  09A7               	comf	??_main+1,f
   358  0065  0AA6               	incf	??_main,f
   359  0066  1903               	skipnz
   360  0067  0AA7               	incf	??_main+1,f
   361  0068  0826               	movf	??_main,w
   362  0069  3E40               	addlw	64
   363  006A  00AB               	movwf	_wait	;volatile
   364  006B  0827               	movf	??_main+1,w
   365  006C  1803               	skipnc
   366  006D  3E01               	addlw	1
   367  006E  3E9C               	addlw	156
   368  006F  00AC               	movwf	_wait+1	;volatile
   369                           
   370                           ;main.c: 64: waith = wait >> 8;
   371  0070  082C               	movf	_wait+1,w	;volatile
   372  0071  00A6               	movwf	??_main
   373  0072  0826               	movf	??_main,w
   374  0073  00FC               	movwf	_waith	;volatile
   375                           
   376                           ;main.c: 65: waitl = wait;
   377  0074  082B               	movf	_wait,w	;volatile
   378  0075  00A6               	movwf	??_main
   379  0076  0826               	movf	??_main,w
   380  0077  00FD               	movwf	_waitl	;volatile
   381                           
   382                           ;main.c: 67: CCP1CON = 0x09;
   383  0078  3009               	movlw	9
   384  0079  0097               	movwf	23	;volatile
   385                           
   386                           ;main.c: 68: CCPR1H = servoh; CCPR1L = servol;
   387  007A  082D               	movf	_servoh,w	;volatile
   388  007B  0096               	movwf	22	;volatile
   389  007C  082E               	movf	_servol,w	;volatile
   390  007D  0095               	movwf	21	;volatile
   391                           
   392                           ;main.c: 69: T1CON = 1;
   393  007E  3001               	movlw	1
   394  007F  0090               	movwf	16	;volatile
   395                           
   396                           ;main.c: 71: TRISCbits.TRISC4 = 0;
   397  0080  1683               	bsf	3,5	;RP0=1, select bank1
   398  0081  1303               	bcf	3,6	;RP1=0, select bank1
   399  0082  1207               	bcf	7,4	;volatile
   400                           
   401                           ;main.c: 74: SSPSTATbits.SMP = 0;
   402  0083  1394               	bcf	20,7	;volatile
   403                           
   404                           ;main.c: 75: SSPSTATbits.CKE = 0;
   405  0084  1314               	bcf	20,6	;volatile
   406                           
   407                           ;main.c: 76: SSPCON = 0x25;
   408  0085  3025               	movlw	37
   409  0086  1283               	bcf	3,5	;RP0=0, select bank0
   410  0087  1303               	bcf	3,6	;RP1=0, select bank0
   411  0088  0094               	movwf	20	;volatile
   412                           
   413                           ;main.c: 77: TRISCbits.TRISC7 = 0;
   414  0089  1683               	bsf	3,5	;RP0=1, select bank1
   415  008A  1303               	bcf	3,6	;RP1=0, select bank1
   416  008B  1387               	bcf	7,7	;volatile
   417                           
   418                           ;main.c: 78: TRISBbits.TRISB6 = 1;
   419  008C  1706               	bsf	6,6	;volatile
   420                           
   421                           ;main.c: 79: TRISBbits.TRISB4 = 1;
   422  008D  1606               	bsf	6,4	;volatile
   423                           
   424                           ;main.c: 80: TRISAbits.TRISA0 = 0;
   425  008E  1005               	bcf	5,0	;volatile
   426                           
   427                           ;main.c: 81: PORTAbits.RA0 = 0;
   428  008F  1283               	bcf	3,5	;RP0=0, select bank0
   429  0090  1303               	bcf	3,6	;RP1=0, select bank0
   430  0091  1005               	bcf	5,0	;volatile
   431  0092                     l742:	
   432                           ;main.c: 82: while (1){
   433                           
   434                           
   435                           ;main.c: 83: uint8_t spi_data;
   436                           ;main.c: 84: if (SSPSTATbits.BF){
   437  0092  1683               	bsf	3,5	;RP0=1, select bank1
   438  0093  1303               	bcf	3,6	;RP1=0, select bank1
   439  0094  1C14               	btfss	20,0	;volatile
   440  0095  2892               	goto	l742
   441                           
   442                           ;main.c: 85: spi_data = SSPBUF;
   443  0096  1283               	bcf	3,5	;RP0=0, select bank0
   444  0097  1303               	bcf	3,6	;RP1=0, select bank0
   445  0098  0813               	movf	19,w	;volatile
   446  0099  00A6               	movwf	??_main
   447  009A  0826               	movf	??_main,w
   448  009B  00A8               	movwf	main@spi_data
   449                           
   450                           ;main.c: 86: if (spi_data >= 40 && spi_data <= 240){
   451  009C  3028               	movlw	40
   452  009D  0228               	subwf	main@spi_data,w
   453  009E  1C03               	skipc
   454  009F  2892               	goto	l742
   455  00A0  30F1               	movlw	241
   456  00A1  0228               	subwf	main@spi_data,w
   457  00A2  1803               	skipnc
   458  00A3  2892               	goto	l742
   459                           
   460                           ;main.c: 87: servo = spi_data - 40;
   461  00A4  0828               	movf	main@spi_data,w
   462  00A5  3ED8               	addlw	216
   463  00A6  00A6               	movwf	??_main
   464  00A7  0826               	movf	??_main,w
   465  00A8  00AF               	movwf	_servo	;volatile
   466  00A9  2892               	goto	l742
   467  00AA                     __end_of_main:	
   468                           
   469                           	psect	text1
   470  0108                     __ptext1:	
   471 ;; *************** function ___wmul *****************
   472 ;; Defined at:
   473 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  multiplier      2    0[BANK0 ] unsigned int 
   476 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  product         2    4[BANK0 ] unsigned int 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  2    0[BANK0 ] unsigned int 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   488 ;;      Params:         0       4       0       0
   489 ;;      Locals:         0       2       0       0
   490 ;;      Temps:          0       0       0       0
   491 ;;      Totals:         0       6       0       0
   492 ;;Total ram usage:        6 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function ___wmul
   504  0108                     ___wmul:	
   505                           
   506                           ;incstack = 0
   507                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   508  0108  1283               	bcf	3,5	;RP0=0, select bank0
   509  0109  1303               	bcf	3,6	;RP1=0, select bank0
   510  010A  01A4               	clrf	___wmul@product
   511  010B  01A5               	clrf	___wmul@product+1
   512  010C                     l658:	
   513  010C  1C20               	btfss	___wmul@multiplier,0
   514  010D  2914               	goto	l160
   515  010E  0822               	movf	___wmul@multiplicand,w
   516  010F  07A4               	addwf	___wmul@product,f
   517  0110  1803               	skipnc
   518  0111  0AA5               	incf	___wmul@product+1,f
   519  0112  0823               	movf	___wmul@multiplicand+1,w
   520  0113  07A5               	addwf	___wmul@product+1,f
   521  0114                     l160:	
   522  0114  3001               	movlw	1
   523  0115                     u155:	
   524  0115  1003               	clrc
   525  0116  0DA2               	rlf	___wmul@multiplicand,f
   526  0117  0DA3               	rlf	___wmul@multiplicand+1,f
   527  0118  3EFF               	addlw	-1
   528  0119  1D03               	skipz
   529  011A  2915               	goto	u155
   530  011B  3001               	movlw	1
   531  011C                     u165:	
   532  011C  1003               	clrc
   533  011D  0CA1               	rrf	___wmul@multiplier+1,f
   534  011E  0CA0               	rrf	___wmul@multiplier,f
   535  011F  3EFF               	addlw	-1
   536  0120  1D03               	skipz
   537  0121  291C               	goto	u165
   538  0122  0820               	movf	___wmul@multiplier,w
   539  0123  0421               	iorwf	___wmul@multiplier+1,w
   540  0124  1D03               	btfss	3,2
   541  0125  290C               	goto	l658
   542  0126  0825               	movf	___wmul@product+1,w
   543  0127  00A1               	movwf	?___wmul+1
   544  0128  0824               	movf	___wmul@product,w
   545  0129  00A0               	movwf	?___wmul
   546  012A  0008               	return
   547  012B                     __end_of___wmul:	
   548                           
   549                           	psect	text2
   550  00AA                     __ptext2:	
   551 ;; *************** function _ccpint *****************
   552 ;; Defined at:
   553 ;;		line 99 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;		None               void
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   567 ;;      Params:         0       0       0       0
   568 ;;      Locals:         0       0       0       0
   569 ;;      Temps:          6       0       0       0
   570 ;;      Totals:         6       0       0       0
   571 ;;Total ram usage:        6 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    1
   574 ;; This function calls:
   575 ;;		i1___wmul
   576 ;; This function is called by:
   577 ;;		Interrupt level 1
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _ccpint
   583  00AA                     _ccpint:	
   584                           
   585                           ;main.c: 100: TMR1H = 0; TMR1L = 0;
   586  00AA  018F               	clrf	15	;volatile
   587  00AB  018E               	clrf	14	;volatile
   588                           
   589                           ;main.c: 101: if (CCP1CON == 9){
   590  00AC  3009               	movlw	9
   591  00AD  0617               	xorwf	23,w	;volatile
   592  00AE  1D03               	btfss	3,2
   593  00AF  28F5               	goto	i1l770
   594                           
   595                           ;main.c: 102: CCP1CON = 8;
   596  00B0  3008               	movlw	8
   597  00B1  0097               	movwf	23	;volatile
   598                           
   599                           ;main.c: 103: CCPR1H = waith;
   600  00B2  087C               	movf	_waith,w	;volatile
   601  00B3  0096               	movwf	22	;volatile
   602                           
   603                           ;main.c: 104: CCPR1L = waitl;
   604  00B4  087D               	movf	_waitl,w	;volatile
   605  00B5  0095               	movwf	21	;volatile
   606                           
   607                           ;main.c: 105: PORTCbits.RC4 = 0;
   608  00B6  1207               	bcf	7,4	;volatile
   609                           
   610                           ;main.c: 107: ccp = (uint16_t) 1200 + servo*18;
   611  00B7  082F               	movf	_servo,w	;volatile
   612  00B8  00F6               	movwf	??_ccpint
   613  00B9  01F7               	clrf	??_ccpint+1
   614  00BA  0876               	movf	??_ccpint,w
   615  00BB  00F0               	movwf	i1___wmul@multiplier
   616  00BC  0877               	movf	??_ccpint+1,w
   617  00BD  00F1               	movwf	i1___wmul@multiplier+1
   618  00BE  3012               	movlw	18
   619  00BF  00F2               	movwf	i1___wmul@multiplicand
   620  00C0  3000               	movlw	0
   621  00C1  00F3               	movwf	i1___wmul@multiplicand+1
   622  00C2  118A  212B  118A   	fcall	i1___wmul
   623  00C5  0870               	movf	?i1___wmul,w
   624  00C6  3EB0               	addlw	176
   625  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   626  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   627  00C9  00A9               	movwf	_ccp	;volatile
   628  00CA  0871               	movf	?i1___wmul+1,w
   629  00CB  1803               	skipnc
   630  00CC  3E01               	addlw	1
   631  00CD  3E04               	addlw	4
   632  00CE  00AA               	movwf	_ccp+1	;volatile
   633                           
   634                           ;main.c: 108: servoh = ccp >> 8;
   635  00CF  082A               	movf	_ccp+1,w	;volatile
   636  00D0  00F6               	movwf	??_ccpint
   637  00D1  0876               	movf	??_ccpint,w
   638  00D2  00AD               	movwf	_servoh	;volatile
   639                           
   640                           ;main.c: 109: servol = ccp;
   641  00D3  0829               	movf	_ccp,w	;volatile
   642  00D4  00F6               	movwf	??_ccpint
   643  00D5  0876               	movf	??_ccpint,w
   644  00D6  00AE               	movwf	_servol	;volatile
   645                           
   646                           ;main.c: 110: wait = (uint16_t) 40000-1 - ccp;
   647  00D7  0829               	movf	_ccp,w	;volatile
   648  00D8  3E01               	addlw	1
   649  00D9  00F6               	movwf	??_ccpint
   650  00DA  082A               	movf	_ccp+1,w	;volatile
   651  00DB  1803               	skipnc
   652  00DC  3E01               	addlw	1
   653  00DD  3E00               	addlw	0
   654  00DE  00F7               	movwf	??_ccpint+1
   655  00DF  09F6               	comf	??_ccpint,f
   656  00E0  09F7               	comf	??_ccpint+1,f
   657  00E1  0AF6               	incf	??_ccpint,f
   658  00E2  1903               	skipnz
   659  00E3  0AF7               	incf	??_ccpint+1,f
   660  00E4  0876               	movf	??_ccpint,w
   661  00E5  3E40               	addlw	64
   662  00E6  00AB               	movwf	_wait	;volatile
   663  00E7  0877               	movf	??_ccpint+1,w
   664  00E8  1803               	skipnc
   665  00E9  3E01               	addlw	1
   666  00EA  3E9C               	addlw	156
   667  00EB  00AC               	movwf	_wait+1	;volatile
   668                           
   669                           ;main.c: 111: waith = wait >> 8;
   670  00EC  082C               	movf	_wait+1,w	;volatile
   671  00ED  00F6               	movwf	??_ccpint
   672  00EE  0876               	movf	??_ccpint,w
   673  00EF  00FC               	movwf	_waith	;volatile
   674                           
   675                           ;main.c: 112: waitl = wait;
   676  00F0  082B               	movf	_wait,w	;volatile
   677  00F1  00F6               	movwf	??_ccpint
   678  00F2  0876               	movf	??_ccpint,w
   679  00F3  00FD               	movwf	_waitl	;volatile
   680                           
   681                           ;main.c: 113: }
   682  00F4  28FC               	goto	i1l774
   683  00F5                     i1l770:	
   684                           
   685                           ;main.c: 114: else{
   686                           ;main.c: 115: CCP1CON = 9;
   687  00F5  3009               	movlw	9
   688  00F6  0097               	movwf	23	;volatile
   689                           
   690                           ;main.c: 116: CCPR1H = servoh;
   691  00F7  082D               	movf	_servoh,w	;volatile
   692  00F8  0096               	movwf	22	;volatile
   693                           
   694                           ;main.c: 117: CCPR1L = servol;
   695  00F9  082E               	movf	_servol,w	;volatile
   696  00FA  0095               	movwf	21	;volatile
   697                           
   698                           ;main.c: 118: PORTCbits.RC4 = 1;
   699  00FB  1607               	bsf	7,4	;volatile
   700  00FC                     i1l774:	
   701                           
   702                           ;main.c: 120: }
   703                           ;main.c: 122: PIR1bits.CCP1IF = 0;
   704  00FC  110C               	bcf	12,2	;volatile
   705  00FD  087B               	movf	??_ccpint+5,w
   706  00FE  00FF               	movwf	127
   707  00FF  087A               	movf	??_ccpint+4,w
   708  0100  008A               	movwf	10
   709  0101  0879               	movf	??_ccpint+3,w
   710  0102  0084               	movwf	4
   711  0103  0E78               	swapf	(??_ccpint+2)^(0+-128),w
   712  0104  0083               	movwf	3
   713  0105  0EFE               	swapf	126,f
   714  0106  0E7E               	swapf	126,w
   715  0107  0009               	retfie
   716  0108                     __end_of_ccpint:	
   717                           
   718                           	psect	intentry
   719  0004                     __pintentry:	
   720                           ;incstack = 0
   721                           ; Regs used in _ccpint: [wreg+status,2+status,0+pclath+cstack]
   722                           
   723  0004                     interrupt_function:	
   724  007E                     saved_w	set	btemp
   725  0004  00FE               	movwf	btemp
   726  0005  0E03               	swapf	3,w
   727  0006  00F8               	movwf	??_ccpint+2
   728  0007  0804               	movf	4,w
   729  0008  00F9               	movwf	??_ccpint+3
   730  0009  080A               	movf	10,w
   731  000A  00FA               	movwf	??_ccpint+4
   732  000B  1283               	bcf	3,5	;RP0=0, select bank0
   733  000C  1303               	bcf	3,6	;RP1=0, select bank0
   734  000D  087F               	movf	btemp+1,w
   735  000E  00FB               	movwf	??_ccpint+5
   736  000F  118A  28AA         	ljmp	_ccpint
   737                           
   738                           	psect	text3
   739  012B                     __ptext3:	
   740 ;; *************** function i1___wmul *****************
   741 ;; Defined at:
   742 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  multiplier      2    0[COMMON] unsigned int 
   745 ;;  multiplicand    2    2[COMMON] unsigned int 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  __wmul          2    4[COMMON] unsigned int 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2    0[COMMON] unsigned int 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   757 ;;      Params:         4       0       0       0
   758 ;;      Locals:         2       0       0       0
   759 ;;      Temps:          0       0       0       0
   760 ;;      Totals:         6       0       0       0
   761 ;;Total ram usage:        6 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_ccpint
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function i1___wmul
   772  012B                     i1___wmul:	
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
   776  012B  01F4               	clrf	i1___wmul@product
   777  012C  01F5               	clrf	i1___wmul@product+1
   778  012D                     i1l672:	
   779  012D  1C70               	btfss	i1___wmul@multiplier,0
   780  012E  2935               	goto	i1l160
   781  012F  0872               	movf	i1___wmul@multiplicand,w
   782  0130  07F4               	addwf	i1___wmul@product,f
   783  0131  1803               	skipnc
   784  0132  0AF5               	incf	i1___wmul@product+1,f
   785  0133  0873               	movf	i1___wmul@multiplicand+1,w
   786  0134  07F5               	addwf	i1___wmul@product+1,f
   787  0135                     i1l160:	
   788  0135  3001               	movlw	1
   789  0136                     u19_25:	
   790  0136  1003               	clrc
   791  0137  0DF2               	rlf	i1___wmul@multiplicand,f
   792  0138  0DF3               	rlf	i1___wmul@multiplicand+1,f
   793  0139  3EFF               	addlw	-1
   794  013A  1D03               	skipz
   795  013B  2936               	goto	u19_25
   796  013C  3001               	movlw	1
   797  013D                     u20_25:	
   798  013D  1003               	clrc
   799  013E  0CF1               	rrf	i1___wmul@multiplier+1,f
   800  013F  0CF0               	rrf	i1___wmul@multiplier,f
   801  0140  3EFF               	addlw	-1
   802  0141  1D03               	skipz
   803  0142  293D               	goto	u20_25
   804  0143  0870               	movf	i1___wmul@multiplier,w
   805  0144  0471               	iorwf	i1___wmul@multiplier+1,w
   806  0145  1D03               	btfss	3,2
   807  0146  292D               	goto	i1l672
   808  0147  0875               	movf	i1___wmul@product+1,w
   809  0148  00F1               	movwf	?i1___wmul+1
   810  0149  0874               	movf	i1___wmul@product,w
   811  014A  00F0               	movwf	?i1___wmul
   812  014B  0008               	return
   813  014C                     __end_ofi1___wmul:	
   814  007E                     btemp	set	126	;btemp
   815  007E                     wtemp	set	126
   816  007E                     wtemp0	set	126
   817  0080                     wtemp1	set	128
   818  0082                     wtemp2	set	130
   819  0084                     wtemp3	set	132
   820  0086                     wtemp4	set	134
   821  0088                     wtemp5	set	136
   822  007F                     wtemp6	set	127
   823  007E                     ttemp	set	126
   824  007E                     ttemp0	set	126
   825  0081                     ttemp1	set	129
   826  0084                     ttemp2	set	132
   827  0087                     ttemp3	set	135
   828  007F                     ttemp4	set	127
   829  007E                     ltemp	set	126
   830  007E                     ltemp0	set	126
   831  0082                     ltemp1	set	130
   832  0086                     ltemp2	set	134
   833  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      9      16
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ccpint in COMMON

    _ccpint->i1___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _ccpint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ccpint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ccpint in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     319
                                              6 BANK0      3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     252
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ccpint                                               6     6      0     144
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (3) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul

 _ccpint (ROOT)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      9      10       3       20.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      1E       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      1E      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Apr 28 03:55:10 2016

            __CFG_CP$OFF 0000              _SSPSTATbits 0094                       l63 0023  
    ___wmul@multiplicand 0022         i1___wmul@product 0074                      l160 0114  
                    l742 0092                      l658 010C                      u155 0115  
                    u165 011C             __CFG_CPD$OFF 0000                      _ccp 0029  
                    fsr0 0004                     _main 001F                     _wait 002B  
                   btemp 007E                     ltemp 007E                     start 0011  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _ANSEL 011E                    _T1CON 0010                    i1l160 0135  
                  i1l672 012D                    i1l770 00F5                    i1l774 00FC  
                  u20_25 013D                    _TMR1H 000F                    _TMR1L 000E  
                  u19_25 0136            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
                  _waith 007C                    _waitl 007D                    _servo 002F  
         __CFG_BOREN$OFF 0000             main@spi_data 0028                    pclath 000A  
       __end_ofi1___wmul 014C                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003      i1___wmul@multiplier 0070  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0013             __end_of_main 00AA  
                 ??_main 0026                   _CCPR1H 0016                   _CCPR1L 0015  
                 _ANSELH 011F                   _OSCCON 008F                   _SSPCON 0014  
                 _SSPBUF 0013                   ___wmul 0108                   _ccpint 00AA  
                 _servoh 002D                   _servol 002E                   saved_w 007E  
__end_of__initialization 001C           __pcstackCOMMON 0070                ?i1___wmul 0070  
             __pbssBANK0 0029               __pmaintext 001F                  ?___wmul 0020  
                ?_ccpint 0070               __pintentry 0004                  _CM1CON0 0119  
                _CM2CON0 011A                  _CCP1CON 0017               ??i1___wmul 0074  
        __size_of___wmul 0023          __size_of_ccpint 005E                  __ptext1 0108  
                __ptext2 00AA                  __ptext3 012B     end_of_initialization 001C  
  i1___wmul@multiplicand 0072                _PORTAbits 0005                _PORTCbits 0007  
              _TRISAbits 0085                _TRISBbits 0086                _TRISCbits 0087  
         __end_of___wmul 012B           __end_of_ccpint 0108      start_initialization 0013  
      __size_ofi1___wmul 0021                 ??___wmul 0024                 ??_ccpint 0076  
            __pbssCOMMON 007C                ___latbits 0001            __pcstackBANK0 0020  
      interrupt_function 0004           ___wmul@product 0024                 _PIE1bits 008C  
               _PIR1bits 000C        ___wmul@multiplier 0020                 i1___wmul 012B  
          __size_of_main 008B               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F        __CFG_FOSC$INTRCIO 0000  
